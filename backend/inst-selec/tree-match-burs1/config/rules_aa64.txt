root   ; ins_ret                 ; 0 ; |
root   ; ins_store               ; 0 ; |
root   ; ins_savereg             ; 0 ; |
root   ; ins_bc                  ; 0 ; |

ins_ret ; retv(reg_gen)      ; 1 ;  set($0.D, %w0) | emit(ret)
ins_ret ; ret                ; 1 ; emit(ret)

ins_store ; store(reg, reg)             ; 10 ; emit(str_v1, $0.D, $1.D, 0)
ins_store ; store(reg, add(reg, reg))   ; 10 ; emit(str_v1, $0.D, $1.0.D, $1.1.D)
ins_store ; store(reg, add(reg, const)) ; 10 ; emit(str_v1, $0.D, $1.0.D, $1.1.val)
ins_store ; store(reg, add(const, reg)) ; 10 ; emit(str_v1, $0.D, $1.1.D, $1.0.val)
ins_store ; store(reg, add(reg, mul(reg, c4))) ; 10 ; emit(str_v1_lsl, $0.D, $1.0.D, $1.1.0.D, 2)

ins_savereg ; reg ; 0 ; set($D, $def)

ins_bc      ; bc(icmp_eq(reg, reg), block, block) ; 31 ; emit(cmp, $0.0.D, $0.1.D) | emit(b_ne, $2.name) | emit(b, $1.name)
ins_bc      ; bc(icmp_eq(reg, c0), block, block)  ; 30 ; emit(cbz, $0.0.D, $1.name) | emit(b, $2.name)

block   ; __block__         ; 0 ; |
const   ; __const__0        ; 0 ; |
const   ; __const__2        ; 0 ; |
const   ; __const__4        ; 0 ; |
const   ; __const__x        ; 0 ; |
c0      ; __const__0        ; 0 ; |
c2      ; __const__2        ; 0 ; |
c4      ; __const__4        ; 0 ; |
reg     ; __reg__           ; 0 ; set($D, $name)
reg     ; reg_gen           ; 0 ; |
reg_gen ; const             ; 1 ; emit(mov, $D, $val)
reg_gen ; reg               ; 1 ; emit(mov, $D, $0.D)


reg_gen ; add(reg, reg)            ;  1 ; emit(add, $D, $0.D, $1.D)
reg_gen ; add(reg, const)          ;  1 ; emit(add, $D, $0.D, $1.val)
reg_gen ; add(const, reg)          ;  1 ; emit(add, $D, $0.val, $1.D)
reg_gen ; add(mul(reg, c2), const) ;  1 ; emit(add_lsl, $D, $1.val $0.0.D, 1)
reg_gen ; add(mul(reg, reg), reg)  ;  3 ; emit(madd, $D, $0.0.D, $0.1.D, $1.D)
reg_gen ; add(reg, mul(reg, reg))  ;  3 ; emit(madd, $D, $1.0.D, $1.1.D, $0.D)

reg_gen ; sub(reg, reg)            ;  1 ; emit(sub, $D, $0.D, $1.D)
reg_gen ; sub(reg, const)          ;  1 ; emit(sub, $D, $0.D, $1.val)
reg_gen ; sub(const, reg)          ;  1 ; emit(sub, $D, $0.val, $1.D)

reg_gen ; mul(reg, reg)            ;  3 ; emit(mul, $D, $0.D, $1.D)
reg_gen ; mul(reg, const)          ;  3 ; emit(mul, $D, $0.D, $1.val)
reg_gen ; mul(const, reg)          ;  3 ; emit(mul, $D, $0.val, $1.D)
reg_gen ; mul(reg, c4)             ;  1 ; emit(mov_lsl, $D, $0.D, 2)

reg_gen ; neg(reg)                 ;  1 ; emit(neg, $D, $0.D)
reg_gen ; neg(mul(reg, reg))       ;  3 ; emit(mneg, $D, $0.0.D, $0.1.D)
reg_gen ; neg(mul(reg, const))     ;  3 ; emit(mneg, $D, $0.0.D, $0.1.val)
reg_gen ; neg(mul(const, reg))     ;  3 ; emit(mneg, $D, $0.0.val, $0.1.D)

reg_gen ; load(reg)                ; 10 ; emit(ldr_v1, $D, $0.D, 0)
reg_gen ; load(add(reg, reg))      ; 10 ; emit(ldr_v1, $D, $0.0.D, $0.1.D)
reg_gen ; load(add(reg, const))    ; 10 ; emit(ldr_v1, $D, $0.0.D, $0.1.val)
reg_gen ; load(add(const, reg))    ; 10 ; emit(ldr_v1, $D, $0.0.val, $0.1.D)

reg_gen ; mov(reg)                 ;  1 ; emit(mov, $D, $0.D)
reg_gen ; mov(const)               ;  1 ; emit(mov, $D, $0.val)
